"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.checkBaselineImageExists = checkBaselineImageExists;

var _fsExtra = require("fs-extra");

var _chalk = require("chalk");

var _path = require("path");

var _logger = require("../helpers/logger");

/**
 * Check if the given image already exists
 *
 * @param {object}  folders
 * @param {string}  fileName
 * @param {boolean} autoSaveBaseline
 *
 * @return {Promise<*>}
 */
async function checkBaselineImageExists(folders, fileName, autoSaveBaseline) {
  return new Promise((resolvePromise, rejectPromise) => {
    (0, _fsExtra.access)((0, _path.resolve)(folders.baseline, fileName), error => {
      if (error) {
        if (autoSaveBaseline) {
          try {
            (0, _fsExtra.copySync)((0, _path.resolve)(folders.actual, fileName), (0, _path.resolve)(folders.baseline, fileName));

            _logger.nativeAppCompareLog.info(`\nINFO: Autosaved the image to ${(0, _path.resolve)(folders.baseline, fileName)}\n`);
          } catch (err) {
            rejectPromise((0, _chalk.red)(`Image could not be copied. The following error was thrown: ${err}`));
          }
        } else {
          rejectPromise((0, _chalk.yellow)(`Image not found, copy your actual image: 
'${(0, _path.resolve)(folders.actual, fileName)}'
manually to your baseline or enable the option 
'autoSaveBaseline: true'
and this module will do that automatically for you.`));
        }
      }

      resolvePromise();
    });
  });
}