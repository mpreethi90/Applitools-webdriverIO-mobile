"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = saveElement;

var _utils = require("../helpers/utils");

var _saveBase64Image = require("../methods/saveBase64Image");

var _takeElementScreenshot = require("../methods/takeElementScreenshot");

var _takeResizedElementScreenshot = require("../methods/takeResizedElementScreenshot");

/**
 * Save an element
 *
 * @param {object}  element The element
 * @param {string}  tag
 * @param {object}  options
 *
 * @example
 *  // Default
 *  driver.saveElement('~selector', 'tag-name-of-image');
 *
 *  // With all resize dimensions
 *  driver.saveElement(
 *      '~selector',
 *      'tag-name-of-image',
 *      {
 *          resizeDimensions: {
 *              top: 10,
 *              right: 20,
 *              bottom: 30,
 *              left: 40,
 *          }
 *      }
 *  );
 *
 *  // With only 1 resize dimension
 *  driver.saveElement(
 *      '~selector',
 *      'tag-name-of-image',
 *      {
 *          resizeDimensions: {
 *              left: 10,
 *          }
 *      }
 * );
 *
 * @return {Promise<{
 *  base64Screenshot: string,
 *  fileName: string,
 *  folders: {
 *      actual: string,
 *  },
 * }>}
 */
async function saveElement(element, tag, options = {}) {
  // Determine the filedata
  const fileData = (0, _utils.determineFileData)(this.capabilities, this.folders.actual, this.formatString, tag);
  let base64Screenshot; // Create resized element screenshot if needed

  if (options.resizeDimensions) {
    base64Screenshot = await (0, _takeResizedElementScreenshot.takeResizedElementScreenshot)(element, fileData.fileName, options.resizeDimensions);
  } else {
    base64Screenshot = await (0, _takeElementScreenshot.takeElementScreenshot)(element, fileData.fileName);
  } // Save the screenshot


  await (0, _saveBase64Image.saveBase64Image)(fileData.filePath, base64Screenshot); // Return the element screenshot data

  return {
    base64Screenshot,
    fileName: fileData.fileName,
    folders: {
      actual: this.folders.actual
    }
  };
}