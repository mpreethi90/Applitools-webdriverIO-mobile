"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessibilityMatchSettingsData = void 0;
const utils = require("@applitools/utils");
const AccessibilityRegionType_1 = require("../enums/AccessibilityRegionType");
const Region_1 = require("./Region");
class AccessibilityMatchSettingsData {
    constructor(settingsOrRegionOrX, y, width, height, type) {
        this._settings = {};
        if (utils.types.isNumber(settingsOrRegionOrX)) {
            return new AccessibilityMatchSettingsData({ region: { x: settingsOrRegionOrX, y, width, height }, type });
        }
        else if (!utils.types.has(settingsOrRegionOrX, 'region')) {
            return new AccessibilityMatchSettingsData({ region: settingsOrRegionOrX });
        }
        this.region = settingsOrRegionOrX.region;
        this.type = settingsOrRegionOrX.type;
    }
    get region() {
        return this._settings.region;
    }
    set region(region) {
        utils.guard.isObject(region, { name: 'region' });
        this._settings.region = region;
    }
    getRegion() {
        return new Region_1.RegionData(this._settings.region);
    }
    setRegion(region) {
        this.region = region;
    }
    getLeft() {
        return this.region.x;
    }
    setLeft(left) {
        this.region.x = left;
    }
    getTop() {
        return this.region.y;
    }
    setTop(top) {
        this.region.y = top;
    }
    getWidth() {
        return this.region.width;
    }
    setWidth(width) {
        this.region.width = width;
    }
    getHeight() {
        return this.region.height;
    }
    setHeight(height) {
        this.region.height = height;
    }
    get type() {
        return this._settings.type;
    }
    set type(type) {
        utils.guard.isEnumValue(type, AccessibilityRegionType_1.AccessibilityRegionType, { name: 'type', strict: false });
        this._settings.type = type;
    }
    getType() {
        return this.type;
    }
    setType(type) {
        this.type = type;
    }
    /** @internal */
    toObject() {
        return this._settings;
    }
    /** @internal */
    toJSON() {
        return utils.general.toJSON(this._settings);
    }
    /** @internal */
    toString() {
        return utils.general.toString(this);
    }
}
exports.AccessibilityMatchSettingsData = AccessibilityMatchSettingsData;
//# sourceMappingURL=AccessibilityMatchSettings.js.map