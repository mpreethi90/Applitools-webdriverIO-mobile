"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RunningSessionData = void 0;
const utils = require("@applitools/utils");
const RenderingInfo_1 = require("./RenderingInfo");
class RunningSessionData {
    /** @internal */
    constructor(session) {
        this._session = {};
        this._session = session instanceof RunningSessionData ? session.toJSON() : session;
    }
    get id() {
        return this._session.id;
    }
    getId() {
        return this.id;
    }
    setId(id) {
        this._session.id = id;
    }
    get sessionId() {
        return this._session.sessionId;
    }
    getSessionId() {
        return this.sessionId;
    }
    /** @deprecated */
    setSessionId(sessionId) {
        this._session.sessionId = sessionId;
    }
    get batchId() {
        return this._session.batchId;
    }
    getBatchId() {
        return this.batchId;
    }
    /** @deprecated */
    setBatchId(batchId) {
        this._session.batchId = batchId;
    }
    get baselineId() {
        return this._session.baselineId;
    }
    getBaselineId() {
        return this.baselineId;
    }
    /** @deprecated */
    setBaselineId(baselineId) {
        this._session.baselineId = baselineId;
    }
    get url() {
        return this._session.url;
    }
    getUrl() {
        return this.url;
    }
    /** @deprecated */
    setUrl(url) {
        this._session.url = url;
    }
    get isNew() {
        return this._session.isNew;
    }
    getIsNew() {
        return this.isNew;
    }
    /** @deprecated */
    setIsNew(isNew) {
        this._session.isNew = isNew;
    }
    get renderingInfo() {
        return this._session.renderingInfo;
    }
    getRenderingInfo() {
        return new RenderingInfo_1.RenderingInfoData(this.renderingInfo);
    }
    /** @deprecated */
    setRenderingInfo(renderingInfo) {
        this._session.renderingInfo = renderingInfo;
    }
    /** @internal */
    toObject() {
        return this._session;
    }
    /** @internal */
    toJSON() {
        return utils.general.toJSON(this._session);
    }
    /** @internal */
    toString() {
        return utils.general.toString(this);
    }
}
exports.RunningSessionData = RunningSessionData;
